<?xml version="1.0" encoding="UTF-8"?>

<tc:tc-config xmlns:tc="http://www.terracotta.org/config"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.terracotta.org/schema/terracotta-4.xsd">

	<servers>
		<server host="192.168.0.10" name="server1">
			<dso-port>9510</dso-port>
			<jmx-port>9520</jmx-port>
			<l2-group-port>9530</l2-group-port>
			<data>/opt/tc-runtime/server1-data</data>
			<logs>/opt/tc-runtime/server-logs</logs>
			<statistics>/opt/tc-runtime/cluster-statistics</statistics>
			<dso>
				<persistence>
					<mode>temporary-swap-only</mode>
				</persistence>
				<client-reconnect-window>120</client-reconnect-window>
				<garbage-collection>
					<enabled>true</enabled>
					<verbose>false</verbose>
					<interval>3600</interval>
				</garbage-collection>
			</dso>
		</server>
		<server host="10.4.6.218" name="server2">
			<dso-port>9510</dso-port>
			<jmx-port>9520</jmx-port>
			<l2-group-port>9530</l2-group-port>
			<data>/opt/tc-runtime/server2-data</data>
			<logs>/opt/tc-runtime/server-logs</logs>
			<statistics>/opt/tc-runtime/cluster-statistics</statistics>
			<dso>
				<persistence>
					<mode>temporary-swap-only</mode>
				</persistence>
				<client-reconnect-window>120</client-reconnect-window>
				<garbage-collection>
					<enabled>true</enabled>
					<verbose>false</verbose>
					<interval>3600</interval>
				</garbage-collection>
			</dso>
		</server>
		<ha>
			<mode>networked-active-passive</mode>
			<networked-active-passive>
				<election-time>5</election-time>
			</networked-active-passive>
		</ha>
	</servers>

	<clients>
		<logs>client-runtime/client-logs/%(nodeId)</logs>
		<statistics>client-runtime/client-statistics/%(nodeId)</statistics>
	</clients>

	<application>
		<dso>
			<instrumented-classes>
				<include>
					<class-expression>test.cluster.core.tc.Task</class-expression>
				</include>
				<include>
					<class-expression>test.cluster.tc.caches.*</class-expression>
				</include>
				<include>
					<class-expression>test.cluster.tc.tasks.*</class-expression>
				</include>
			</instrumented-classes>
			<locks>
				<autolock>
					<method-expression>
						* test.cluster.core.tc.ClusterShareRoot.addValue(..)
					</method-expression>
					<lock-level>write</lock-level>
				</autolock>
				<autolock>
					<method-expression>void test.cluster.tc.caches.*.set*(..)</method-expression>
					<lock-level>write</lock-level>
				</autolock>
				<autolock>
					<method-expression>void test.cluster.tc.caches.*.get*(..)</method-expression>
					<lock-level>read</lock-level>
				</autolock>
			</locks>
			<roots>
				<root>
					<field-name>test.cluster.core.tc.ClusterShareRoot.instance</field-name>
				</root>
			</roots>
			<distributed-methods>
				<method-expression>
					void test.cluster.core.tc.ClusterShareRoot.dmiTask(..)
				</method-expression>
			</distributed-methods>
		</dso>
	</application>

</tc:tc-config>
