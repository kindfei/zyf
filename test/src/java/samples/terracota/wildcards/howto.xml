<howto>
h1.  Wildcards Example

h2.  Summary

This example shows how to use wildcards in the tc-config.xml file.  A full range of wildcards are supported, including package names, class names, partial names, return types, parameter types, interfaces and superclasses.  For the full specification, please reference the [AspectWerkz Pattern Language|AspectWerkz Pattern Language].

This example is somewhat contrived, and shows several patterns, in the insturmentation and methods, that make it easier to specify write locks and read locks for getters and setters (respectively) as well as all "Bean" classes.  

Normally, one does not put synchronized on bean getters and setters, this example is merely showing how one can easily add autolocks in bulk.  Typically, code that uses beans, say an update method, would have it's own coarser grained synchronization, that can be used in place of the finer grained synchronization shown here.  Typcial methods here might be called "updateForm1 and could use a corresponding wildcard of '* *..*.update*(..)'.

h2.  How to run

*Node 1:*
{code}
$ javac *.java
$ start-tc-server &amp;
$ dso-java Main
Enter name> Fred
Added Fred on Mon Dec 10 14:38:35 PST 2007

$ dso-java Main
Enter name> Jane
Added Jane on Mon Dec 10 14:42:75 PST 2007
{code}

*Node 2:*
{code}
$ dso-java Main list
Jane : Jane was added on Mon Dec 10 14:42:75 PST 2007
Fred : Fred was added on Mon Dec 10 14:38:35 PST 2007
{code}
</howto>
